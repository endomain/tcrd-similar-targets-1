color=term),
size=0.5,
alpha=0.2) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=0.2) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia","hacking")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=0.2) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia","hack")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=0.2) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia","wikileak")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=0.2) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia","email")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=0.2) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=0.2) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=0.2) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Paired")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=0.2) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Accent")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=0.5) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Accent")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=0.5) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set2")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=0.5) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Paired")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=1) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Paired")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=1) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=1) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme_fivethirtyeight()+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=1) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme_solarized()+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=1) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme_fivethirtyeight()+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=1) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme_fivethirtyeight()+
theme(legend.position="none",
axis.title.x=element_text())
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=1) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme_fivethirtyeight()+
theme(legend.position="none",
axis.title.x=element_text())
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=1) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
xlab("date")+
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme_fivethirtyeight()+
theme(legend.position="none",
axis.title.x=element_text())
nytimes_tf_idf %>%
filter(term %in% c("trump","obama","clinton","health","obamacar","russia")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=term),
size=0.5,
alpha=1) +
geom_point() +
geom_smooth() +
facet_wrap(~term) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Words ")+
theme(legend.position="none")
nytimes_tf_idf %>%
filter(term %in% c("trump")) %>%
ggplot(aes(x=date,
y=tf_idf,
color=author)) +
geom_point() +
geom_smooth() +
facet_wrap(~author) +
scale_x_date(labels=date_format("%Y-%m"))+
scale_colour_brewer(palette="Set1")+
ggtitle("TF-IDF for Word 'Trump' over time")+
theme(legend.position="none")
tidy_df %>%
filter(subject %in% top_5_subjects$subject) %>%
ggplot(aes(x=subject,
y=FRE_nytimes,
fill=subject)) +
geom_boxplot()+
xlab(NULL)+
ylab("Flesch-Kincaid Grade Levels")+
scale_fill_brewer(palette="Set1")+
facet_wrap(~author,scales="free_x")+
theme(axis.text.x = element_blank())
load("C:/Users/Jung Hoon Son/OneDrive/Coursework/DBMI/QMSS4063/final-project-team-tweets/trump_tweets.RData")
rm(c2009)
rm(c2010)
rm(c2011)
rm(c2012)
rm(all_tweets_grouped)
rm(dt)
rm(df)
rm(tidy_df)
rm(neg)
rm(pos)
rm(subjects)
rm(c2017)
rm(c2016)
rm(FRE_nytimes)
rm(topic_array)
rm(topic_num)
rm(c2015)
rm(c2014)
rm(c2013)
rm(associations_df)
rm(top_5_subjects)
rm(top_8_subjects)
save.image("C:/Users/Jung Hoon Son/OneDrive/Coursework/DBMI/QMSS4063/HW4/assignment-4-interactive-visuals-plasmak11/trump_tweets.RData")
load("C:/Users/Jung Hoon Son/Desktop/QMSS4063workspace/.RData")
library(jsonlite)
library(quanteda)
library(tm)
library(qdap)
library(qdapDictionaries)
library(tidytext)
library(dplyr)
library(stringr)
library(lubridate)
library(tidytext)
library(ggplot2)
library(ggthemes)
library(scales)
load("C:/Users/Jung Hoon Son/OneDrive/Coursework/DBMI/BINF4002/tcrd-similar-targets/workspace.RData")
all_tcrd_reduced_train$y<-as.factor(all_tcrd_reduced_train$y)
# model <- naiveBayes(y~.,data=all_tcrd_reduced_train)
model<-randomForest(y~.,data=all_tcrd_reduced_train)
pred <- predict(model,all_tcrd_reduced_test[,c(-which(colnames(all_tcrd_reduced_test)=="y"))])
table(pred, all_tcrd_reduced_test$y)
playing_with_fire<-predict(model,all_tcrd)
playing_with_fire<-predict(model,all_tcrd[,c(-which(colnames(all_tcrd_reduced_test)=="y"))])
library(randomForest)
library(caret)
library(e1071)
# get rid of rare features
temp<-all_tcrd_reduced[,colSums(all_tcrd_reduced) > 70]
# merge our gold standards
temp<-merge(temp,all_gold[,c('id','idgfam','tdl_class','y')],by.x='target_id',by.y='id')
# Exclude the target_id column for training
temp<-temp[,c(-1)]
# Split the sample at even distribution using our y gold standard label
library(caTools)
spl<-sample.split(temp$y,SplitRatio = 0.8)
all_tcrd_reduced_train<-temp[spl,]
all_tcrd_reduced_test<-temp[!spl,]
library(e1071)
library(randomForest)
library(caret)
# Make sure y is a factor
all_tcrd_reduced_train$y<-as.factor(all_tcrd_reduced_train$y)
# model <- naiveBayes(y~.,data=all_tcrd_reduced_train)
model<-randomForest(y~.-idgfam-tdl_class,data=all_tcrd_reduced_train)
pred <- predict(model,all_tcrd_reduced_test[,c(-which(colnames(all_tcrd_reduced_test)=="y"))])
table(pred, all_tcrd_reduced_test$y)
# get rid of rare features
temp<-all_tcrd_reduced[,colSums(all_tcrd_reduced) > 20]
# merge our gold standards
temp<-merge(temp,all_gold[,c('id','idgfam','tdl_class','y')],by.x='target_id',by.y='id')
# Exclude the target_id column for training
temp<-temp[,c(-1)]
# Split the sample at even distribution using our y gold standard label
library(caTools)
spl<-sample.split(temp$y,SplitRatio = 0.8)
all_tcrd_reduced_train<-temp[spl,]
all_tcrd_reduced_test<-temp[!spl,]
library(e1071)
library(randomForest)
library(caret)
# Make sure y is a factor
all_tcrd_reduced_train$y<-as.factor(all_tcrd_reduced_train$y)
# model <- naiveBayes(y~.,data=all_tcrd_reduced_train)
model<-randomForest(y~.-idgfam-tdl_class,data=all_tcrd_reduced_train)
pred <- predict(model,all_tcrd_reduced_test[,c(-which(colnames(all_tcrd_reduced_test)=="y"))])
table(pred, all_tcrd_reduced_test$y)
temp<-all_tcrd_reduced[,colSums(all_tcrd_reduced) > 20]
temp<-merge(temp,all_gold[,c('id','idgfam','tdl_class','y')],by.x='target_id',by.y='id')
all_gold
temp<-merge(temp,all_gold[,c('id','idgfam','tdl','y')],by.x='target_id',by.y='id')
temp<-temp[,c(-1)]
library(caTools)
spl<-sample.split(temp$y,SplitRatio = 0.8)
all_tcrd_reduced_train<-temp[spl,]
all_tcrd_reduced_test<-temp[!spl,]
library(e1071)
library(randomForest)
library(caret)
all_tcrd_reduced_train$y<-as.factor(all_tcrd_reduced_train$y)
model<-randomForest(y~.-idgfam-tdl_class,data=all_tcrd_reduced_train)
model<-randomForest(y~.-idgfam-tdl,data=all_tcrd_reduced_train)
playing_with_fire<-predict(model,all_tcrd)
playing_with_fire<-predict(model,all_tcrd[,c(-which(colnames(all_tcrd_reduced_test)=="tdl",-which(colnames(all_tcrd_reduced_test)=="idgfam"))])
which(colnames(all_tcrd)=="tdl")
which(colnames(all_tcrd)=="idgfam")
playing_with_fire<-predict(model,all_tcrd)
GCPR_ids
gcpr_tdl_labels
all_tcrd$tdl_class
all_tcrd
temp<-merge(temp,all_gold[,c('id','tdl','y')],by.x='target_id',by.y='id')
# get rid of rare features
temp<-all_tcrd_reduced[,colSums(all_tcrd_reduced) > 20]
# merge our gold standards
temp<-merge(temp,all_gold[,c('id','tdl','y')],by.x='target_id',by.y='id')
# Exclude the target_id column for training
temp<-temp[,c(-1)]
# Split the sample at even distribution using our y gold standard label
library(caTools)
spl<-sample.split(temp$y,SplitRatio = 0.8)
all_tcrd_reduced_train<-temp[spl,]
all_tcrd_reduced_test<-temp[!spl,]
library(e1071)
library(randomForest)
library(caret)
# Make sure y is a factor
all_tcrd_reduced_train$y<-as.factor(all_tcrd_reduced_train$y)
# model <- naiveBayes(y~.,data=all_tcrd_reduced_train)
model<-randomForest(y~.-idgfam-tdl,data=all_tcrd_reduced_train)
pred <- predict(model,all_tcrd_reduced_test[,c(-which(colnames(all_tcrd_reduced_test)=="y"))])
table(pred, all_tcrd_reduced_test$y)
# model <- naiveBayes(y~.,data=all_tcrd_reduced_train)
model<-randomForest(y~.-tdl,data=all_tcrd_reduced_train)
pred <- predict(model,all_tcrd_reduced_test[,c(-which(colnames(all_tcrd_reduced_test)=="y"))])
table(pred, all_tcrd_reduced_test$y)
playing_with_fire<-predict(model,all_tcrd)
which(colnames(all_tcrd)=="tdl_class")
colnames(all_tcrd)[which(colnames(all_tcrd)=="tdl_class")]
bah<-all_tcrd
colnames(bah)[which(colnames(bah)=="tdl_class")]<-"tdl"
playing_with_fire<-predict(model,bah)
playing_with_fire
bah$pred<-playing_with_fire
bah %>% select(tdl,pred)
library(dplyr)
bah<-bah %>% select(tdl,pred)
bah
table(bah)
table(bah$tdl)
all_tcrd$target_id
varImpo(model)
varImp(model)
varImp(model) %>% as.data.frame() %>% arrange(desc(Overall))
write.csv(all_tcrd$target_id,"target_id_order")
setwd("C:/Users/Jung Hoon Son/OneDrive/Coursework/DBMI/BINF4002/tcrd-similar-targets")
idl_idgfam<-read.csv("all_tcrd_tdl_idgfam.csv")
View(idl_idgfam)
bah<-merge(bah,idl_idgfam,by.x='target_id',by.y='id')
View(idl_idgfam)
View(idl_idgfam)
bah<-merge(bah,idl_idgfam[,c('id','tdl','idgfam'],by.x='target_id',by.y='id')
colnames(bah)[which(colnames(bah)=="tdl_class")]<-"tdl"
playing_with_fire<-predict(model,all_tcrd)
bah<-merge(bah,idl_idgfam[,c('id','tdl','idgfam'],by.x='target_id',by.y='id')
colnames(bah)[which(colnames(bah)=="tdl_class")]<-"tdl"
playing_with_fire<-predict(model,all_tcrd)
bah<-merge(bah,idl_idgfam[,c('id','tdl','idgfam'],by.x='target_id',by.y='id')
colnames(bah)[which(colnames(bah)=="tdl_class")]<-"tdl"
playing_with_fire<-predict(model,all_tcrd)
bah<-merge(bah,idl_idgfam[,c('id','tdl','idgfam')],by.x='target_id',by.y='id')
bah<-all_tcrd
idl_idgfam<-read.csv("all_tcrd_tdl_idgfam.csv")
bah<-merge(bah,idl_idgfam[,c('id','tdl','idgfam')],by.x='target_id',by.y='id')
?bind_cols
colnames(idl_idgfam)[1]
colnames(idl_idgfam)[1]<-"target_id"
bah<-bind_col(bah,idl_idgfam,.id='target_id')
bah<-bind_cols(bah,idl_idgfam,.id='target_id')
bah<-all_tcrd
idl_idgfam<-read.csv("all_tcrd_tdl_idgfam.csv")
colnames(idl_idgfam)[1]<-"target_id"
bah<-bind_cols(bah,idl_idgfam,.id='target_id')
bah<-bind_rows(bah,idl_idgfam,.id='target_id')
idl_idgfam[match(all_tcrd$target_id, idl_idgfam$target_id),]
idl_idgfam[match(all_tcrd$target_id, idl_idgfam$target_id),]
idl_idgfam[match(all_tcrd$target_id, idl_idgfam$target_id),]
